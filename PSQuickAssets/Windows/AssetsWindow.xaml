<mui:WindowBase
    x:Class="PSQuickAssets.Windows.AssetsWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:local="clr-namespace:PSQuickAssets"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mui="clr-namespace:MortuusUI;assembly=MortuusUI"
    xmlns:muiext="clr-namespace:MortuusUI.Extensions;assembly=MortuusUI"
    xmlns:muicontrols="clr-namespace:MortuusUI.Controls;assembly=MortuusUI"
    xmlns:vm="clr-namespace:PSQuickAssets.ViewModels"
    xmlns:windows="clr-namespace:PSQuickAssets.Windows"
    xmlns:cmds="clr-namespace:PSQuickAssets.Commands"
    xmlns:controls="clr-namespace:PSQuickAssets.Controls"
    xmlns:local1="clr-namespace:PSQuickAssets.Views"
    xmlns:assets="clr-namespace:PSQuickAssets.Assets;assembly=PSQuickAssets.Assets"
    xmlns:converters="clr-namespace:PSQuickAssets.WPF.Converters"
    xmlns:system="clr-namespace:System;assembly=System.Runtime" 
    mc:Ignorable="d"
    lex:LocalizeDictionary.DesignCulture="en"
    lex:ResxLocalizationProvider.DefaultAssembly="PSQuickAssets"
    lex:ResxLocalizationProvider.DefaultDictionary="Strings"
    x:Name="MainWindow"
    Title="AssetsWindow"
    Width="500"
    Height="300"
    Topmost="{Binding Config.AlwaysOnTop}"
    SavesState="True"
    Foreground="{StaticResource ForegroundMainBrush}"
    Background="{StaticResource BackgroundMainBrush}"
    TitleBackground="{StaticResource BorderMainBrush}"
    BorderBrush="{StaticResource BorderMainBrush}"
    BorderThickness="2"
    FontFamily="{StaticResource FontLight}"
    DataContext="{Binding AssetsWindowViewModel, Source={StaticResource ViewModelLocator}}"
    mui:WindowChromeFix.FixMaximizedOverflow="{Binding Config.MaximizedWindowBorderFix}"
    d:BorderThickness="0"
    d:DataContext="{d:DesignInstance Type=vm:MainViewModel, IsDesignTimeCreatable=True}"
    d:WindowStyle="None">

    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{x:Static mui:WindowCommands.MinimizeWindow}" />
        <KeyBinding Gesture="Shift+Esc" Command="{x:Static cmds:GeneralCommands.ShutdownCommand}" />

        <KeyBinding Command="{Binding IncreaseThumbnailSizeCommand}" Gesture="Control+OemPlus" />
        <KeyBinding Command="{Binding DecreaseThumbnailSizeCommand}" Gesture="Control+OemMinus" />


    </Window.InputBindings>

    <mui:WindowBase.Resources>

        <!--  TITLE  -->
        <Grid x:Key="TitleBarContent" Margin="0,0,0,1">
            <StackPanel Margin="2,0,0,0" Orientation="Horizontal">

                <!--  SETTINGS BUTTON  -->
                <Button Padding="4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        ToolTip="{lex:Loc Settings}"
                        Style="{StaticResource OpacityButton}"
                        Command="{Binding OpenOrCloseSettingsCommand, Source={StaticResource WindowManagerCommands}}">
                    <Button.Content>
                        <Path Height="16"
                              Data="{StaticResource SettingsIconGeometry}"
                              Fill="{StaticResource ForegroundMainBrush}"
                              Stretch="Uniform" />
                    </Button.Content>
                </Button>

                <!--  TERMINAL BUTTON  -->
                <Button Padding="4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Style="{StaticResource OpacityButton}"
                        Command="{x:Static cmds:GeneralCommands.ToggleTerminalWindow}"
                        ToolTip="{lex:Loc Terminal}"
                        Visibility="{Binding Config.DebugMode, Converter={StaticResource BoolToVisibility}}">
                    <Button.Content>
                        <Path Height="16"
                              Data="{StaticResource TerminalIconGeomerty}"
                              Fill="{StaticResource ForegroundMainBrush}"
                              Stretch="Uniform" />
                    </Button.Content>
                </Button>
            </StackPanel>

            <!--  HIDE/CLOSE BUTTON  -->
            <Button Height="26"
                    Padding="5,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    ToolTip="{lex:Loc Main_Close_Tooltip}"
                    Style="{StaticResource OpacityButton}">
                <Button.Content>
                    <Path Margin="-1,-1,0,0"
                          Fill="{StaticResource ForegroundMainBrush}"
                          Stretch="Uniform">
                        <Path.Style>
                            <Style TargetType="Path">
                                <Setter Property="Data" Value="{StaticResource CollapseExpandIconGeometry}" />
                                <Setter Property="Width" Value="16" />
                                <Setter Property="Height" Value="16" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsCtrlPressed, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windows:AssetsWindow}}" Value="True">
                                        <Setter Property="Data" Value="{StaticResource CloseIconGeometry}" />
                                        <Setter Property="Width" Value="16" />
                                        <Setter Property="Height" Value="15" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                </Button.Content>
                <Button.InputBindings>
                    <MouseBinding Command="{x:Static mui:WindowCommands.MinimizeWindow}" Gesture="LeftClick" />
                    <MouseBinding Command="{x:Static cmds:GeneralCommands.ShutdownCommand}" Gesture="Ctrl+LeftClick" />
                </Button.InputBindings>
            </Button>
        </Grid>

    </mui:WindowBase.Resources>

    <mui:WindowBase.Style>
        <Style TargetType="{x:Type mui:WindowBase}">
            <Setter Property="TitleContent" Value="{StaticResource TitleBarContent}" />
        </Style>
    </mui:WindowBase.Style>


    <Grid x:Name="ContentRoot"
          Background="Transparent">
        <!-- Background must be set to "Transparent" for InputBindings to work on whole area.-->
        <Grid.InputBindings>
            <!-- Defining scroll size-change hotkeys in the "Content" grid because WindowChrome's CaptionHeight prevents 
                 hotkey working in the empty space of title bar, only when mouse is over some control.  -->
            <MouseBinding Command="{Binding IncreaseThumbnailSizeCommand}" Gesture="{muiext:MouseWheel Direction=Up, Keys=Ctrl}" />
            <MouseBinding Command="{Binding DecreaseThumbnailSizeCommand}" Gesture="{muiext:MouseWheel Direction=Down, Keys=Ctrl}" />
        </Grid.InputBindings>

        <!--  TITLE PREVIEW  -->
        <d:Border Margin="0,-32,0,0" Background="{StaticResource BackgroundFarBrush}">
            <d:ContentPresenter VerticalAlignment="Top" Content="{StaticResource TitleBarContent}" />
        </d:Border>



        <ListBox ItemsSource="{Binding AssetsViewModel.AssetGroups}"
                 Background="{x:Null}"
                 BorderThickness="0"
                 Margin="6"
                 Foreground="{StaticResource ForegroundMainBrush}"
                 SelectionMode="Extended"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ScrollViewer.CanContentScroll="False"
                 IsTabStop="False"
                 PreviewMouseWheel="ListBox_PreviewMouseWheel">

            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentPresenter Margin="0 0 0 6"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>

            <d:ListBox.ItemsSource>
                <x:Array Type="{x:Type assets:AssetGroup}">
                    <assets:AssetGroup Name="Group">
                        <assets:AssetGroup.Assets>
                            <assets:Asset Path="Test asset">
                                <assets:Asset.Thumbnail>
                                    <BitmapImage UriSource="../Resources/Images/test.jpg" />
                                </assets:Asset.Thumbnail>
                            </assets:Asset>
                        </assets:AssetGroup.Assets>
                    </assets:AssetGroup>
                </x:Array>
            </d:ListBox.ItemsSource>

            <ListBox.ItemTemplate>
                <DataTemplate>

                    <!--  GROUP  -->
                    <StackPanel Background="Transparent"
                                Tag="{Binding ElementName=GroupName}">
                        <StackPanel.ContextMenu>
                            <ContextMenu FontSize="13"
                                         FontFamily="{StaticResource FontMedium}">

                                <!-- GROUP INFO -->
                                <MenuItem Style="{StaticResource ContentMenuItem}">
                                    <MenuItem.Header>
                                        <StackPanel Margin="8"
                                                    VerticalAlignment="Top"
                                                    HorizontalAlignment="Stretch">
                                            <Grid HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding Name}"
                                                       FontSize="16"
                                                           Grid.Column="0"
                                                       VerticalAlignment="Top"
                                                       HorizontalAlignment="Left"/>
                                                <StackPanel Orientation="Horizontal"
                                                            Grid.Column="1"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Right">
                                                    <TextBlock Text="{Binding AssetCount}"
                                                           Margin="30 0 4 0"/>
                                                    <TextBlock Text="{lex:Loc PSQuickAssets:Strings:Assets}" />
                                                </StackPanel>
                                            </Grid>
                                        </StackPanel>
                                    </MenuItem.Header>
                                </MenuItem>

                                <Separator/>

                                <!--SELECT AND ADD ASSETS-->
                                <MenuItem Header="{lex:Loc PSQuickAssets:Strings:Assets_AddFiles}"
                                          Command="{Binding AssetsViewModel.SelectAndAddFilesToGroupCommand, Source={StaticResource ViewModelLocator}}"
                                          CommandParameter="{Binding Path=PlacementTarget.DataContext, 
                                                    RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                    <MenuItem.Icon>
                                        <TextBlock Text="&#xF8AA;" FontSize="15" FontFamily="{StaticResource SegoeMDL2Icons}"
                                                   Foreground="{StaticResource ForegroundMainBrush}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                
                                <Separator/>

                                <!--RENAME-->
                                <MenuItem Header="{lex:Loc PSQuickAssets:Strings:Rename}"
                                          Command="{Binding Path=PlacementTarget.Tag.EnterEditModeCommand, 
                                                    RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                    <MenuItem.Icon>
                                        <TextBlock Text="&#xE8AC;" FontSize="17" FontFamily="{StaticResource SegoeMDL2Icons}"
                                                   Foreground="#99A8D6"/>
                                    </MenuItem.Icon>
                                </MenuItem>

                                <Separator/>

                                <!--REMOVE-->
                                <MenuItem Header="{lex:Loc PSQuickAssets:Strings:RemoveGroup}"
                                          Command="{Binding AssetsViewModel.RemoveGroupCommand, Source={StaticResource ViewModelLocator}}"
                                          CommandParameter="{Binding Path=PlacementTarget.DataContext, 
                                                    RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                    <MenuItem.Icon>
                                        <TextBlock Text="&#xE74D;" FontSize="17" FontFamily="{StaticResource SegoeMDL2Icons}"
                                                   Foreground="#DC6767"/>
                                    </MenuItem.Icon>
                                </MenuItem>

                            </ContextMenu>
                        </StackPanel.ContextMenu>

                        <Grid x:Name="GroupHeader" VerticalAlignment="Top">

                            <StackPanel Orientation="Horizontal"
                                        VerticalAlignment="Stretch"
                                        HorizontalAlignment="Left"
                                        Margin="4 0 4 4">

                                <!--  EXPAND/COLLAPSE ASSETS  -->
                                <Button x:Name="AssetsCollapser"
                                        VerticalAlignment="Center"
                                        Content="&#xE76C;"
                                        FontFamily="{StaticResource SegoeMDL2Icons}"
                                        FontSize="16"
                                        FontWeight="Bold"
                                        Padding="2"
                                        RenderTransformOrigin="0.5, 0.5"
                                        Command="{Binding ToggleExpandedCommand}">
                                    <Button.RenderTransform>
                                        <RotateTransform />
                                    </Button.RenderTransform>
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource OpacityButton}">
                                            <Setter Property="ToolTip" Value="{lex:Loc ExpandCollapse}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                                    <Setter Property="ToolTip" Value="{lex:Loc Collapse}" />
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                                                 By="90"
                                                                                 Duration="0:0:0.12" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                                                 By="-90"
                                                                                 Duration="0:0:0.12" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                                                    <Setter Property="ToolTip" Value="{lex:Loc Expand}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <muicontrols:ToggleTextBox x:Name="GroupName"
                                                           Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                                           Margin="5 0 0 0"
                                                           FontFamily="{StaticResource FontMedium}"
                                                           FontSize="14"
                                                           Opacity="0.6"
                                                           BorderThickness="0"
                                                           Background="Transparent"
                                                           Foreground="{StaticResource ForegroundMainBrush}"
                                                           FocusVisualStyle="{StaticResource BracketsFocusVisual}"
                                                           SelectionBrush="{StaticResource ForegroundIntenseBrush}">
                                    <muicontrols:ToggleTextBox.EditModeActivationGesture>
                                        <MouseGesture MouseAction="LeftDoubleClick"/>
                                    </muicontrols:ToggleTextBox.EditModeActivationGesture>
                                    <muicontrols:ToggleTextBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="{lex:Loc PSQuickAssets:Strings:Copy}"
                                                      InputGestureText="Ctrl+C"
                                                      Command="{x:Static cmds:GeneralCommands.TextBoxCopyCommand}"
                                                      CommandParameter="{Binding Path=PlacementTarget, 
                                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                                <MenuItem.Icon>
                                                    <TextBlock Text="&#xE8C8;" FontSize="17" FontFamily="{StaticResource SegoeMDL2Icons}"
                                                   Foreground="#78B4D9"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </muicontrols:ToggleTextBox.ContextMenu>
                                </muicontrols:ToggleTextBox>
                            </StackPanel>
                        </Grid>

                        <ListBox ItemsSource="{Binding Assets}"
                                 Background="{x:Null}"
                                 BorderThickness="0"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 IsTabStop="False"
                                 Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibility}}">

                            <ListBox.CacheMode>
                                <BitmapCache />
                            </ListBox.CacheMode>

                            <ListBox.Template>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </ListBox.Template>

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Background="{x:Null}"
                                               IsItemsHost="True"
                                               Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="Margin" Value="5" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <ContentPresenter />
                                                <!--<Border Name="ItemBorder" CornerRadius="5">
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Setter Property="BorderBrush" Value="Transparent" />
                                                            <Setter Property="BorderThickness" Value="4" />
                                                        </Style>
                                                    </Border.Style>

                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="ItemBorder" Property="Background" Value="#555" />
                                                        <Setter TargetName="ItemBorder" Property="BorderBrush" Value="#555" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>-->
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>


                            <!--  ASSET  -->
                            <ListBox.ItemTemplate>
                                <DataTemplate>

                                    <Grid x:Name="AssetRoot" Cursor="Hand">

                                        <Grid.InputBindings>
                                            <MouseBinding Gesture="LeftClick" 
                                                          Command="{Binding Path=AssetsViewModel.PhotoshopCommands.AddImageAsLayerCommand, Source={StaticResource ViewModelLocator}}"
                                                          CommandParameter="{Binding}"/>
                                            <MouseBinding Gesture="Ctrl+LeftClick"
                                                          Command="{Binding Path=AssetsViewModel.PhotoshopCommands.OpenImageCommand, Source={StaticResource ViewModelLocator}}"
                                                          CommandParameter="{Binding}"/>
                                        </Grid.InputBindings>
                                        
                                        <Grid.ToolTip>
                                            <StackPanel MaxWidth="400">
                                                <TextBlock FontSize="16"
                                                           Text="{Binding FileName}"
                                                           TextWrapping="Wrap" />
                                                <Rectangle Height="1.5"
                                                           Margin="0,5,0,4"
                                                           Fill="{StaticResource BorderLighter}" />
                                                <TextBlock Text="{Binding Dimensions, Converter={x:Static converters:SizeToImageDimensionsConverter.Instance}}" />
                                                <TextBlock Text="{Binding FileSize, Converter={x:Static converters:BytesToSizeConverter.Instance}}" />
                                            </StackPanel>
                                        </Grid.ToolTip>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                        </Grid.RowDefinitions>

                                        <Border x:Name="AssetBackground"
                                                CornerRadius="4"
                                                Grid.RowSpan="2"
                                                Effect="{StaticResource AssetShadow}">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="Background" Value="#333" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=AssetRoot}" Value="True">
                                                            <Setter Property="Background" Value="#555" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>

                                        <Border x:Name="Thumbnail"
                                                Grid.Row="0"
                                                CornerRadius="4 4 2 2"
                                                d:Height="60"
                                                d:Width="80"
                                                Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.Config.ThumbnailSize}">

                                            <!--
                                                Proportionally set Width of a thumbnail by multiplying
                                                Height (which is controlled by ThumbnailSize) with proportions of an image
                                            -->
                                            <Border.Width>
                                                <MultiBinding Converter="{x:Static converters:ProportionConverter.Instance}" ConverterParameter="2.5">
                                                    <Binding Path="Thumbnail.PixelWidth" />
                                                    <Binding Path="Thumbnail.PixelHeight" />
                                                    <Binding Path="Height" RelativeSource="{RelativeSource Mode=Self}" />
                                                </MultiBinding>
                                            </Border.Width>

                                            <Border.Background>
                                                <ImageBrush d:ImageSource="../Resources/Images/test.jpg"
                                                            d:Stretch="UniformToFill"
                                                            ImageSource="{Binding Thumbnail, Mode=OneTime, IsAsync=True}"
                                                            RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                            Stretch="UniformToFill" />
                                            </Border.Background>
                                        </Border>

                                        <StackPanel Grid.Row="1" MaxWidth="{Binding ElementName=Thumbnail, Path=ActualWidth}">
                                            <TextBlock Text="{Binding Name}"
                                                       HorizontalAlignment="Left"
                                                       Margin="7 5"
                                                       Foreground="{StaticResource ForegroundMainBrush}"
                                                       FontFamily="{StaticResource FontMedium}"
                                                       TextAlignment="Justify"
                                                       TextWrapping="NoWrap"/>
                                        </StackPanel>

                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>

                        </ListBox>

                        <!--  GROUP  -->
                        <StackPanel Visibility="Collapsed">
                            <!--  HEADER  -->
                            <Grid Margin="3,7,3,0"
                                  HorizontalAlignment="Stretch"
                                  Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <!--  EXPAND/COLLAPSE ASSETS  -->
                                <controls:PathIcon Width="16"
                                                   Height="16"
                                                   Margin="0,0,4,0"
                                                   Command="{Binding ToggleExpandedCommand}"
                                                   Data="{StaticResource CollapseExpandIconGeometry}"
                                                   Fill="{DynamicResource ForegroundLighterBrush}"
                                                   FillMouseOver="{DynamicResource ForegroundMainBrush}"
                                                   RenderTransformOrigin="0.5, 0.5">
                                    <controls:PathIcon.RenderTransform>
                                        <RotateTransform Angle="270" />
                                    </controls:PathIcon.RenderTransform>
                                    <controls:PathIcon.Style>
                                        <Style TargetType="{x:Type controls:PathIcon}">
                                            <Setter Property="ToolTip" Value="{lex:Loc ExpandCollapse}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                                    <Setter Property="ToolTip" Value="{lex:Loc Collapse}" />
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                                                 To="360"
                                                                                 Duration="0:0:0.12" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                                                 To="270"
                                                                                 Duration="0:0:0.12" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                                                    <Setter Property="ToolTip" Value="{lex:Loc Expand}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </controls:PathIcon.Style>
                                </controls:PathIcon>

                                <!--  NAME  -->
                                <controls:EditableTextBlock Grid.Column="1"
                                                            Margin="2,0"
                                                            HorizontalAlignment="Left"
                                                            FontSize="14"
                                                            Foreground="{StaticResource TextColorBrush}"
                                                            RenameValidation="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=DataContext.AssetsViewModel.IsGroupNameValid}"
                                                            Text="{Binding Name}" />

                                <!--  BUTTONS  -->
                                <StackPanel x:Name="GroupButtons"
                                            Grid.Column="2"
                                            HorizontalAlignment="Right"
                                            d:Visibility="Visible"
                                            Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Style>
                                    </StackPanel.Style>

                                    <!--  REMOVE GROUP  -->
                                    <controls:PathIcon Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.AssetsViewModel.RemoveGroupCommand}"
                                                       CommandParameter="{Binding}"
                                                       Data="{StaticResource CloseIconGeometry}"
                                                       Fill="{DynamicResource ForegroundLighterBrush}"
                                                       FillMouseOver="{DynamicResource ForegroundMainBrush}"
                                                       ToolTip="{lex:Loc RemoveGroup}" />
                                </StackPanel>


                            </Grid>

                            <ListBox x:Name="FileList"
                                     d:ItemsSource="{Binding Assets}"
                                     Background="{x:Null}"
                                     BorderThickness="0"
                                     Focusable="False"
                                     ItemsSource="{Binding Assets}"
                                     Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibility}}">

                                <ListBox.CacheMode>
                                    <BitmapCache />
                                </ListBox.CacheMode>

                                <ListBox.Template>
                                    <ControlTemplate>
                                        <ItemsPresenter />
                                    </ControlTemplate>
                                </ListBox.Template>

                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Margin="1"
                                                   Background="{x:Null}"
                                                   IsItemsHost="True"
                                                   Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>

                                <!--  ASSET  -->
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <local1:AssetView SnapsToDevicePixels="True" UseLayoutRounding="True" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListBoxItem">
                                                    <Border Name="_Border"
                                                            Padding="4"
                                                            CornerRadius="5">
                                                        <ContentPresenter />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter TargetName="_Border" Property="Background" Value="#555" />
                                                            <Setter TargetName="_Border" Property="BorderBrush" Value="#555" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>

                        </StackPanel>
                    </StackPanel>

                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</mui:WindowBase>
