<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddAsLayer" xml:space="preserve">
    <value>Add as layer</value>
  </data>
  <data name="Assets_AddFiles" xml:space="preserve">
    <value>Add Files</value>
  </data>
  <data name="Assets_AddFolder" xml:space="preserve">
    <value>Add Folder</value>
  </data>
  <data name="Assets_AddFolderWithSubfolders" xml:space="preserve">
    <value>Add Folder (including subfolders)</value>
  </data>
  <data name="Assets_AddGroup" xml:space="preserve">
    <value>New Group</value>
  </data>
  <data name="Assets_CannotExecuteActionFromSet" xml:space="preserve">
    <value>Cannot execute action '{0}' from set '{1}'</value>
  </data>
  <data name="Asset_OpenWithShell" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Asset_ShowFileLocation" xml:space="preserve">
    <value>Show file location</value>
  </data>
  <data name="Click" xml:space="preserve">
    <value>Click</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Collapse" xml:space="preserve">
    <value>Collapse</value>
  </data>
  <data name="CtrlClick" xml:space="preserve">
    <value>Ctrl+Click</value>
  </data>
  <data name="Expand" xml:space="preserve">
    <value>Expand</value>
  </data>
  <data name="ExpandCollapse" xml:space="preserve">
    <value>Expand/Collapse</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="Main_Close_Tooltip" xml:space="preserve">
    <value>Hide
Ctrl+Click: Exit</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OpenAsNewDoc" xml:space="preserve">
    <value>Open as new document</value>
  </data>
  <data name="PSStatus_Busy" xml:space="preserve">
    <value>Photoshop is busy</value>
  </data>
  <data name="PSStatus_Cancelled" xml:space="preserve">
    <value>Operation was cancelled</value>
  </data>
  <data name="PSStatus_COMError" xml:space="preserve">
    <value>Unexpected error occured</value>
  </data>
  <data name="PSStatus_Failed" xml:space="preserve">
    <value>Failed to communicate with Photoshop</value>
  </data>
  <data name="PSStatus_FileNotFound" xml:space="preserve">
    <value>File not found</value>
  </data>
  <data name="PSStatus_IllegalArgument" xml:space="preserve">
    <value>Invalid path</value>
  </data>
  <data name="PSStatus_InvalidFileFormat" xml:space="preserve">
    <value>Invalid file format</value>
  </data>
  <data name="PSStatus_InvalidFilePath" xml:space="preserve">
    <value>Invalid file path</value>
  </data>
  <data name="PSStatus_NoDocumentsOpen" xml:space="preserve">
    <value>No documents open</value>
  </data>
  <data name="PSStatus_NoSelection" xml:space="preserve">
    <value>Document has no selection</value>
  </data>
  <data name="PSStatus_NotRunning" xml:space="preserve">
    <value>Photoshop is not running</value>
  </data>
  <data name="PSStatus_Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RemoveGroup" xml:space="preserve">
    <value>Remove Group</value>
  </data>
  <data name="SelectAssets" xml:space="preserve">
    <value>Select Assets</value>
  </data>
  <data name="SelectFolder" xml:space="preserve">
    <value>Select Folder</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Settings_AddMaskIfDocumentHasSelection" xml:space="preserve">
    <value>Add mask from selection</value>
  </data>
  <data name="Settings_AddMaskIfDocumentHasSelection_Tooltip" xml:space="preserve">
    <value>If document has a selection, a mask will be applied to added layer</value>
  </data>
  <data name="Settings_AlwaysOnTop" xml:space="preserve">
    <value>Always On Top</value>
  </data>
  <data name="Settings_AlwaysOnTop_Tooltip" xml:space="preserve">
    <value>Keep window above all other windows</value>
  </data>
  <data name="Settings_CheckForUpdates" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="Settings_CheckForUpdates_Info" xml:space="preserve">
    <value>Checks if Github has a new version of the app</value>
  </data>
  <data name="Settings_DebugMode" xml:space="preserve">
    <value>Debug Mode</value>
  </data>
  <data name="Settings_DebugMode_Tooltip" xml:space="preserve">
    <value>Allows to open Terminal window
and causes logger to log more information</value>
  </data>
  <data name="Settings_HideIfClickedOutside" xml:space="preserve">
    <value>Hide window if clicked outside</value>
  </data>
  <data name="Settings_HideIfClickedOutside_Tooltip" xml:space="preserve">
    <value>Main window will hide if deactivated</value>
  </data>
  <data name="Settings_HotkeyPicker_Tooltip" xml:space="preserve">
    <value>Press a key combination to assign.
Delete or Backspace to clear.
Esc to cancel.</value>
  </data>
  <data name="Settings_MaximizedBorderFix" xml:space="preserve">
    <value>Alternative maximized behavior</value>
  </data>
  <data name="Settings_MaximizedBorderFix_Tooltip" xml:space="preserve">
    <value>Turn this on if window is not displayed correctly when maximized.</value>
  </data>
  <data name="Settings_SaveAndClose" xml:space="preserve">
    <value>Save settings and close this window</value>
  </data>
  <data name="Settings_SavingConfigFailed" xml:space="preserve">
    <value>Failed to save setting:</value>
  </data>
  <data name="Settings_SetValueFailed" xml:space="preserve">
    <value>Failed to set config value:</value>
  </data>
  <data name="Settings_ThumbnailSize" xml:space="preserve">
    <value>Thumbnail Size</value>
  </data>
  <data name="Settings_ToggleMainWindowHotkey" xml:space="preserve">
    <value>Window open/close hotkey</value>
  </data>
  <data name="Settings_ToggleMainWindowHotkey_Info" xml:space="preserve">
    <value>Works globally</value>
  </data>
  <data name="Settings_ToggleWindowHotkeyFailed" xml:space="preserve">
    <value>Failed to change "Window open/close hotkey":</value>
  </data>
  <data name="Taskbar_Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Taskbar_Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Taskbar_ShowMainWindow" xml:space="preserve">
    <value>Show main window</value>
  </data>
  <data name="Taskbar_ShowTerminal" xml:space="preserve">
    <value>Show Terminal</value>
  </data>
  <data name="Terminal" xml:space="preserve">
    <value>Terminal</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdateWindow_Title" xml:space="preserve">
    <value>PSQuickAssets Update</value>
  </data>
  <data name="Update_Available" xml:space="preserve">
    <value>Update available</value>
  </data>
  <data name="Update_Current" xml:space="preserve">
    <value>Current:</value>
  </data>
  <data name="Update_Download" xml:space="preserve">
    <value>Download:</value>
  </data>
  <data name="Update_New" xml:space="preserve">
    <value>New:</value>
  </data>
  <data name="Window_MainWindow" xml:space="preserve">
    <value>PSQuickAssets</value>
  </data>
</root>